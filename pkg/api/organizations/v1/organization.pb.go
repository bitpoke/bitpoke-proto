// Code generated by protoc-gen-go. DO NOT EDIT.
// source: presslabs/dashboard/organizations/v1/organization.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Organization represents an organization within the presslabs dashboard
// context
type Organization struct {
	// The fully qualified organization name in the form orgs/{organization_name}.
	// The `organization_name` is a valid DNS label (RFC 1123) with maximum
	// length of 48 characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display_name for the organization
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{0}
}

func (m *Organization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Organization.Unmarshal(m, b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return xxx_messageInfo_Organization.Size(m)
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type GetOrganizationRequest struct {
	// The resource name of the organization to fetch in the form orgs/{organization_name}
	// The `organization_name` MUST be a valid DNS label (RFC 1123)
	// with maximum length of 48 characters.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrganizationRequest) Reset()         { *m = GetOrganizationRequest{} }
func (m *GetOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrganizationRequest) ProtoMessage()    {}
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{1}
}

func (m *GetOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrganizationRequest.Unmarshal(m, b)
}
func (m *GetOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *GetOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationRequest.Merge(m, src)
}
func (m *GetOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrganizationRequest.Size(m)
}
func (m *GetOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationRequest proto.InternalMessageInfo

func (m *GetOrganizationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListOrganizationsRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsRequest) Reset()         { *m = ListOrganizationsRequest{} }
func (m *ListOrganizationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsRequest) ProtoMessage()    {}
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{2}
}

func (m *ListOrganizationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationsRequest.Unmarshal(m, b)
}
func (m *ListOrganizationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationsRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsRequest.Merge(m, src)
}
func (m *ListOrganizationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationsRequest.Size(m)
}
func (m *ListOrganizationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsRequest proto.InternalMessageInfo

func (m *ListOrganizationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOrganizationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListOrganizationsResponse struct {
	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsResponse) Reset()         { *m = ListOrganizationsResponse{} }
func (m *ListOrganizationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse) ProtoMessage()    {}
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{3}
}

func (m *ListOrganizationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationsResponse.Unmarshal(m, b)
}
func (m *ListOrganizationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationsResponse.Marshal(b, m, deterministic)
}
func (m *ListOrganizationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse.Merge(m, src)
}
func (m *ListOrganizationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationsResponse.Size(m)
}
func (m *ListOrganizationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse proto.InternalMessageInfo

func (m *ListOrganizationsResponse) GetOrganizations() []*Organization {
	if m != nil {
		return m.Organizations
	}
	return nil
}

func (m *ListOrganizationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateOrganizationRequest struct {
	// The organization name to assign
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The organization resource to create
	Organization         *Organization `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateOrganizationRequest) Reset()         { *m = CreateOrganizationRequest{} }
func (m *CreateOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrganizationRequest) ProtoMessage()    {}
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{4}
}

func (m *CreateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrganizationRequest.Unmarshal(m, b)
}
func (m *CreateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrganizationRequest.Merge(m, src)
}
func (m *CreateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrganizationRequest.Size(m)
}
func (m *CreateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrganizationRequest proto.InternalMessageInfo

func (m *CreateOrganizationRequest) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *CreateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type UpdateOrganizationRequest struct {
	// The new definition of the Folder. It must include
	// a `name` and `display_name` field. The other fields
	// will be ignored.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	// Fields to be updated.
	// Only the `display_name` can be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateOrganizationRequest) Reset()         { *m = UpdateOrganizationRequest{} }
func (m *UpdateOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrganizationRequest) ProtoMessage()    {}
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{5}
}

func (m *UpdateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrganizationRequest.Unmarshal(m, b)
}
func (m *UpdateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrganizationRequest.Merge(m, src)
}
func (m *UpdateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrganizationRequest.Size(m)
}
func (m *UpdateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrganizationRequest proto.InternalMessageInfo

func (m *UpdateOrganizationRequest) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *UpdateOrganizationRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteOrganizationRequest struct {
	// The resource name of the organization to delete in the form orgs/{organization_name}
	// The `organization_name` MUST be a valid DNS label (RFC 1123)
	// with maximum length of 48 characters.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOrganizationRequest) Reset()         { *m = DeleteOrganizationRequest{} }
func (m *DeleteOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOrganizationRequest) ProtoMessage()    {}
func (*DeleteOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_569837703f90dd12, []int{6}
}

func (m *DeleteOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOrganizationRequest.Unmarshal(m, b)
}
func (m *DeleteOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *DeleteOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOrganizationRequest.Merge(m, src)
}
func (m *DeleteOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteOrganizationRequest.Size(m)
}
func (m *DeleteOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOrganizationRequest proto.InternalMessageInfo

func (m *DeleteOrganizationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Organization)(nil), "presslabs.dashboard.organizations.v1.Organization")
	proto.RegisterType((*GetOrganizationRequest)(nil), "presslabs.dashboard.organizations.v1.GetOrganizationRequest")
	proto.RegisterType((*ListOrganizationsRequest)(nil), "presslabs.dashboard.organizations.v1.ListOrganizationsRequest")
	proto.RegisterType((*ListOrganizationsResponse)(nil), "presslabs.dashboard.organizations.v1.ListOrganizationsResponse")
	proto.RegisterType((*CreateOrganizationRequest)(nil), "presslabs.dashboard.organizations.v1.CreateOrganizationRequest")
	proto.RegisterType((*UpdateOrganizationRequest)(nil), "presslabs.dashboard.organizations.v1.UpdateOrganizationRequest")
	proto.RegisterType((*DeleteOrganizationRequest)(nil), "presslabs.dashboard.organizations.v1.DeleteOrganizationRequest")
}

func init() {
	proto.RegisterFile("presslabs/dashboard/organizations/v1/organization.proto", fileDescriptor_569837703f90dd12)
}

var fileDescriptor_569837703f90dd12 = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0x66, 0xd4, 0x8a, 0x7d, 0xbb, 0x75, 0x71, 0x90, 0xb2, 0x9b, 0x22, 0xac, 0x41, 0xb4, 0x07,
	0x99, 0xd0, 0xf5, 0x50, 0x44, 0xb1, 0xa0, 0x56, 0x11, 0xfc, 0xc5, 0x56, 0x8b, 0x78, 0x59, 0x26,
	0xcd, 0x6b, 0x3a, 0x6c, 0x92, 0x89, 0x99, 0xd9, 0xc5, 0xee, 0xd5, 0x93, 0x77, 0x8f, 0xfa, 0x3f,
	0x78, 0xf6, 0xaf, 0x93, 0x4c, 0xb6, 0x4b, 0xb2, 0x49, 0x20, 0x84, 0xde, 0x86, 0xf7, 0xe3, 0x7b,
	0xdf, 0x7b, 0xf3, 0xcd, 0x1b, 0xd8, 0x8f, 0x13, 0x54, 0x2a, 0xe0, 0xae, 0x72, 0x3c, 0xae, 0xce,
	0x5c, 0xc9, 0x13, 0xcf, 0x91, 0x89, 0xcf, 0x23, 0xb1, 0xe0, 0x5a, 0xc8, 0x48, 0x39, 0xf3, 0xbd,
	0x82, 0x81, 0xc5, 0x89, 0xd4, 0x92, 0xde, 0x5b, 0x25, 0xb2, 0x55, 0x22, 0x2b, 0x24, 0xb2, 0xf9,
	0x9e, 0xb5, 0xe3, 0x4b, 0xe9, 0x07, 0xe8, 0x98, 0x1c, 0x77, 0x76, 0xea, 0x60, 0x18, 0xeb, 0xf3,
	0x0c, 0xc2, 0x1a, 0xae, 0x3b, 0x4f, 0x05, 0x06, 0xde, 0x24, 0xe4, 0x6a, 0x9a, 0x45, 0xd8, 0x87,
	0xd0, 0xfd, 0x90, 0x83, 0xa4, 0x14, 0xae, 0x45, 0x3c, 0xc4, 0x3e, 0x19, 0x92, 0xdd, 0xcd, 0xb1,
	0x39, 0xd3, 0xbb, 0xd0, 0xf5, 0x84, 0x8a, 0x03, 0x7e, 0x3e, 0x31, 0xbe, 0x2b, 0xc6, 0xd7, 0x59,
	0xda, 0xde, 0xf3, 0x10, 0xed, 0x87, 0xb0, 0xfd, 0x1a, 0x75, 0x1e, 0x69, 0x8c, 0xdf, 0x66, 0xa8,
	0x74, 0x15, 0xa0, 0x7d, 0x0c, 0xfd, 0xb7, 0x42, 0x15, 0xc2, 0xd5, 0x45, 0xfc, 0x0e, 0x6c, 0xc6,
	0xdc, 0xc7, 0x89, 0x12, 0x8b, 0x2c, 0x69, 0x63, 0x7c, 0x23, 0x35, 0x1c, 0x89, 0x05, 0xd2, 0x3b,
	0x00, 0xc6, 0xa9, 0xe5, 0x14, 0xa3, 0x25, 0x0f, 0x13, 0xfe, 0x29, 0x35, 0xd8, 0x7f, 0x08, 0x0c,
	0x2a, 0x80, 0x55, 0x2c, 0x23, 0x85, 0xf4, 0x0b, 0x6c, 0x15, 0xa6, 0xd7, 0x27, 0xc3, 0xab, 0xbb,
	0x9d, 0xd1, 0x88, 0x35, 0x99, 0x33, 0x2b, 0xf4, 0x56, 0x04, 0xa2, 0xf7, 0xa1, 0x17, 0xe1, 0x77,
	0x3d, 0x29, 0x71, 0xdb, 0x4a, 0xcd, 0x1f, 0x57, 0xfc, 0x7e, 0x13, 0x18, 0xbc, 0x48, 0x90, 0x6b,
	0xac, 0x9a, 0xd4, 0x03, 0xe8, 0xe5, 0x61, 0x27, 0xc2, 0x5b, 0x0e, 0xed, 0x66, 0xde, 0xfc, 0xc6,
	0xa3, 0xc7, 0xd0, 0xcd, 0x5b, 0x4c, 0xad, 0x76, 0x7d, 0x14, 0x70, 0xec, 0xbf, 0x04, 0x06, 0x9f,
	0x63, 0xaf, 0x86, 0xde, 0x7a, 0x55, 0x72, 0x39, 0x55, 0xe9, 0x13, 0xe8, 0xcc, 0x4c, 0x51, 0x23,
	0xcb, 0x65, 0x33, 0x16, 0xcb, 0x94, 0xcb, 0x2e, 0x94, 0xcb, 0x5e, 0xa5, 0xca, 0x7d, 0xc7, 0xd5,
	0x74, 0x0c, 0x59, 0x78, 0x7a, 0xb6, 0x1d, 0x18, 0xbc, 0xc4, 0x00, 0xab, 0x19, 0x57, 0x48, 0x6f,
	0xf4, 0x6f, 0x03, 0x6e, 0x17, 0xe4, 0x71, 0x84, 0xc9, 0x5c, 0x9c, 0x20, 0xfd, 0x49, 0x80, 0x96,
	0xef, 0x86, 0x1e, 0x34, 0xeb, 0xaf, 0xf6, 0x56, 0xad, 0x16, 0x03, 0xa2, 0x3f, 0x08, 0xf4, 0xd6,
	0x9e, 0x13, 0x7d, 0xda, 0x0c, 0xa7, 0xfa, 0x15, 0xb6, 0x62, 0x91, 0x4e, 0xa4, 0x2c, 0x87, 0xa6,
	0x13, 0xa9, 0x15, 0x52, 0x2b, 0x2e, 0x21, 0xd0, 0xf2, 0x3d, 0x37, 0xa5, 0x52, 0xab, 0x10, 0x6b,
	0xbb, 0x24, 0xb3, 0xc3, 0x74, 0x7b, 0xd2, 0x5f, 0x04, 0x6e, 0x95, 0x16, 0x09, 0x7d, 0xd6, 0xac,
	0x5c, 0xdd, 0x6a, 0xb3, 0x0e, 0x5a, 0xe7, 0x67, 0x1b, 0xec, 0xf9, 0xe3, 0xaf, 0xfb, 0xbe, 0xd0,
	0x67, 0x33, 0x97, 0x9d, 0xc8, 0xd0, 0xa9, 0xfa, 0x57, 0xe2, 0xa9, 0xef, 0xf0, 0x58, 0x94, 0xfe,
	0x17, 0xf7, 0xba, 0xe9, 0xf0, 0xd1, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0xea, 0x53, 0x19,
	0x8e, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrganizationsServiceClient is the client API for OrganizationsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrganizationsServiceClient interface {
	// CreateOrganization creates a new organization
	CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	// GetOrganization fetches an organization by it's name
	GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	// UpdateOrganization updates an organization details
	UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
	// DeleteOrganization deletes an organization by it's name
	DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ListOrganizations list organizations
	ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
}

type organizationsServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationsServiceClient(cc *grpc.ClientConn) OrganizationsServiceClient {
	return &organizationsServiceClient{cc}
}

func (c *organizationsServiceClient) CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := c.cc.Invoke(ctx, "/presslabs.dashboard.organizations.v1.OrganizationsService/CreateOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsServiceClient) GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := c.cc.Invoke(ctx, "/presslabs.dashboard.organizations.v1.OrganizationsService/GetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsServiceClient) UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	out := new(Organization)
	err := c.cc.Invoke(ctx, "/presslabs.dashboard.organizations.v1.OrganizationsService/UpdateOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsServiceClient) DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/presslabs.dashboard.organizations.v1.OrganizationsService/DeleteOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationsServiceClient) ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	out := new(ListOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/presslabs.dashboard.organizations.v1.OrganizationsService/ListOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationsServiceServer is the server API for OrganizationsService service.
type OrganizationsServiceServer interface {
	// CreateOrganization creates a new organization
	CreateOrganization(context.Context, *CreateOrganizationRequest) (*Organization, error)
	// GetOrganization fetches an organization by it's name
	GetOrganization(context.Context, *GetOrganizationRequest) (*Organization, error)
	// UpdateOrganization updates an organization details
	UpdateOrganization(context.Context, *UpdateOrganizationRequest) (*Organization, error)
	// DeleteOrganization deletes an organization by it's name
	DeleteOrganization(context.Context, *DeleteOrganizationRequest) (*empty.Empty, error)
	// ListOrganizations list organizations
	ListOrganizations(context.Context, *ListOrganizationsRequest) (*ListOrganizationsResponse, error)
}

func RegisterOrganizationsServiceServer(s *grpc.Server, srv OrganizationsServiceServer) {
	s.RegisterService(&_OrganizationsService_serviceDesc, srv)
}

func _OrganizationsService_CreateOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServiceServer).CreateOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presslabs.dashboard.organizations.v1.OrganizationsService/CreateOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServiceServer).CreateOrganization(ctx, req.(*CreateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationsService_GetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServiceServer).GetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presslabs.dashboard.organizations.v1.OrganizationsService/GetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServiceServer).GetOrganization(ctx, req.(*GetOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationsService_UpdateOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServiceServer).UpdateOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presslabs.dashboard.organizations.v1.OrganizationsService/UpdateOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServiceServer).UpdateOrganization(ctx, req.(*UpdateOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationsService_DeleteOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServiceServer).DeleteOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presslabs.dashboard.organizations.v1.OrganizationsService/DeleteOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServiceServer).DeleteOrganization(ctx, req.(*DeleteOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationsService_ListOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationsServiceServer).ListOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presslabs.dashboard.organizations.v1.OrganizationsService/ListOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationsServiceServer).ListOrganizations(ctx, req.(*ListOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrganizationsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "presslabs.dashboard.organizations.v1.OrganizationsService",
	HandlerType: (*OrganizationsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrganization",
			Handler:    _OrganizationsService_CreateOrganization_Handler,
		},
		{
			MethodName: "GetOrganization",
			Handler:    _OrganizationsService_GetOrganization_Handler,
		},
		{
			MethodName: "UpdateOrganization",
			Handler:    _OrganizationsService_UpdateOrganization_Handler,
		},
		{
			MethodName: "DeleteOrganization",
			Handler:    _OrganizationsService_DeleteOrganization_Handler,
		},
		{
			MethodName: "ListOrganizations",
			Handler:    _OrganizationsService_ListOrganizations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "presslabs/dashboard/organizations/v1/organization.proto",
}
