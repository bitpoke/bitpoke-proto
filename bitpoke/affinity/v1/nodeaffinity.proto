syntax = "proto3";

package bitpoke.affinity.v1;

option (gogoproto.equal_all) = true; // Required for test generation
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.gostring_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.populate_all) = true; // Required for test generation
option (gogoproto.protosizer_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.verbose_equal_all) = true;
option go_package = "github.com/bitpoke/bitpoke-go/pkg/affinity/v1beta1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// NodeAffinity describes node affinity scheduling rules for the pod.
message NodeAffinity {
  NodeSelector required_during_scheduling_ignored_during_execution = 1;
  repeated PreferredSchedulingTerm preferred_during_scheduling_ignored_during_execution = 2 [(gogoproto.nullable) = false];
}

// NodeSelector represents the union of the results of one or more label queries
// over a set of nodes; that is, it represents the OR of the selectors represented
// by the node selector terms.
message NodeSelector {
  repeated NodeSelectorTerm node_selector_terms = 1 [(gogoproto.nullable) = false];
}

// PreferredSchedulingTerm allows preferring NodeSelectorTerms more than other by attaching weights to them.
// An empty preferred scheduling term matches all objects with implicit weight 0
// (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
message PreferredSchedulingTerm {
  int32 weight = 1;
  NodeSelectorTerm preference = 2 [(gogoproto.nullable) = false];
}

// NodeSelectorTerm represents the terminology used to select nodes.
// A null or empty node selector term matches no objects. The requirements of
// them are ANDed.
message NodeSelectorTerm {
  repeated NodeSelectorRequirement match_expressions = 1 [(gogoproto.nullable) = false];
  repeated NodeSelectorRequirement match_fields = 2 [(gogoproto.nullable) = false];
}

// NodeSelectorRequirement represents a selector that contains values, a key,
// and an operator that relates the key and values.
message NodeSelectorRequirement {
  string key = 1;
  string operator = 2 [(gogoproto.casttype) = "k8s.io/api/core/v1.NodeSelectorOperator"];
  repeated string values = 3;
}
