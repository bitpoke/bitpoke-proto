syntax = "proto3";

package presslabs.dashboard.sites.v1;

option (gogoproto.equal_all) = true; // Required for test generation
option (gogoproto.gostring_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.populate_all) = true; // Required for test generation
option (gogoproto.protosizer_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.verbose_equal_all) = true;
option go_package = "v1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

// Site represents an site within the presslabs dashboard
// context
message Site {
  // The current status of the site.
  enum Status {
    // Not set.
    INVALID = 0;
    // The SITE_STATUS_PROVISIONING state indicates the site is being created.
    PROVISIONING = 1;
    // The SITE_STATUS_RUNNING state indicates the site has been provisioned and is fully
    // usable.
    RUNNING = 2;
    // The SITE_STATUS_ERROR state indicates the site may be unusable. Details
    // can be found in the `statusMessage` field.
    ERROR = 3;
  }
  // The fully qualified site name in the form
  // project/super-awesome/site/{site_name}.
  // The `site_name` is a valid DNS label (RFC 1123) with maximum
  // length of 48 characters.
  // The name is read-only
  string name = 1;
  // The primary domain for site
  string primary_domain = 2;
  // The wordpress image
  string wordpress_image = 3;
  // The site endpoints
  repeated Endpoint endpoints = 4;
  // [Output only] The current status of this site.
  Status status = 5;
  // [Output only] Additional information about the current status of this
  // site, if available.
  string status_message = 6;
}

// Endpoint for the site
message Endpoint {
  string ip = 1;
  string host = 2;
}

message CreateSiteRequest {
  // The parent project, for example "project/{project_name}".
  // The parent is a required parameter
  string parent = 1;
  // The site resource to create
  Site site = 2 [
    (gogoproto.embed) = true,
    (gogoproto.nullable) = false
  ];
}

message GetSiteRequest {
  // The resource name of the site to fetch in the form
  // project/super-awesome/site/{site_name}.
  // The `site_name` MUST be a valid DNS label (RFC 1123)
  // with maximum length of 48 characters.
  string name = 1;
}

message UpdateSiteRequest {
  // The new definition of the Folder. It must include a `name`
  Site site = 1 [
    (gogoproto.embed) = true,
    (gogoproto.nullable) = false
  ];
  // Fields to be updated.
  // Only the `primary_domain` and `wordpress_image` can be updated
  google.protobuf.FieldMask update_mask = 2 [
    (gogoproto.embed) = true,
    (gogoproto.nullable) = false
  ];
}

message DeleteSiteRequest {
  // The resource name of the site to delete in the form
  // project/super-awesome/site/{site_name}.
  // The `site_name` MUST be a valid DNS label (RFC 1123)
  // with maximum length of 48 characters.
  string name = 1;
}

message ListSitesRequest {
  // The parent project, for example "project/{project_name}".
  // The parent is a required parameter
  string parent = 1;
  // The maximum number of items to return.
  int32 page_size = 2;
  // The next_page_token value returned from a previous List request, if
  // any.
  string page_token = 3;
}

message ListSitesResponse {
  repeated Site sites = 1 [(gogoproto.nullable) = false];
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// SitesService allow managing sites
service SitesService {
  // CreateSite creates a new site
  rpc CreateSite(CreateSiteRequest) returns (Site);
  // GetSite fetches an site by it's name
  rpc GetSite(GetSiteRequest) returns (Site);
  // UpdateSite updates a site details
  rpc UpdateSite(UpdateSiteRequest) returns (Site);
  // DeleteSite deletes a site by it's name
  rpc DeleteSite(DeleteSiteRequest) returns (google.protobuf.Empty);
  // ListSites list sites
  rpc ListSites(ListSitesRequest) returns (ListSitesResponse);
}
